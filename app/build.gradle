apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.qi.frank.baserxjavasetup"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode project.VERSION_CODE.toInteger()
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ROOT_URL", PRODUCTION_URL
        }
        debug {
            debuggable true
            buildConfigField "String", "ROOT_URL", DEVELOP_URL
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def newName = ['sileckt']
                newName.addAll(variant.getProductFlavors()*.name)
                newName.add(variant.buildType.name)
                newName.add(variant.versionName)
                newName.add(variant.versionCode)
                newName.addAll([gitBranch(), gitSHA()])

                def newApkName = "${newName.join("-")}.apk"
                output.outputFileName = new File("build/", newApkName)
            }
        }
        defaultConfig {
            javaCompileOptions {
                annotationProcessorOptions {
                    includeCompileClasspath false
                }
            }
        }
        testOptions.unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }

        dexOptions {
            jumboMode true

            javaMaxHeapSize "4g"
        }
    }
}

def gitBranch() {
    def p = 'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}

def gitSHA() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // data binding
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // performace on reflection JAVA Bean
    implementation 'org.parceler:parceler-api:1.1.11'
    annotationProcessor 'org.parceler:parceler:1.1.11'

    // log report
    // implementation 'com.jakewharton.timber:timber:4.7.1'
    // fabric crash report
    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }

    // actioncable client
    implementation 'com.github.hosopy:actioncable-client-java:0.1.2'

    // ui
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:animated-vector-drawable:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'

    // firbase message
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.google.firebase:firebase-messaging:17.3.0'
    implementation 'com.google.firebase:firebase-invites:16.0.1'

    // google api
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-gcm:15.0.1'

    // json data
    implementation 'com.google.code.gson:gson:2.8.2'

    // https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // remote api call
    // implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // using java 8 lambada
    implementation 'com.annimon:stream:1.2.1'

    // third party ui library
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation "me.leolin:ShortcutBadger:1.1.21@aar"

    // test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
